// <auto-generated/>
using NetAF.Blazor.Classes;
using NetAF.Targets.Html;

namespace NetAF.Blazor.Components
{
    /// <summary>
    /// Provides a component that allows a user to interact with a game.
    /// </summary>
    public partial class GameComponent : INetAFComponent
    {
        #region Fields

        private HtmlAdapter htmlAdapter;

        #endregion

        /// <summary>
        /// Get the output component.
        /// </summary>
        public OutputComponent OutputComponent { get; private set; }

        /// <summary>
        /// Get the input component.
        /// </summary>
        public InputComponent InputComponent { get; private set; }

        /// <summary>
        /// Get the restore point component.
        /// </summary>
        public RestorePointComponent RestorePointComponent { get; private set; }

        #region Implementation of IFramePresenter

        /// <summary>
        /// Present a frame.
        /// </summary>
        /// <param name="frame">The frame to write, as a string.</param>
        public void Present(string frame)
        {
            OutputComponent?.Update(frame);
            RestorePointComponent?.Update();
            InputComponent?.Update();
        }

        #endregion

        #region Implementation of INetAFComponent

        /// <summary>
        /// Set the adapter.
        /// </summary>
        /// <param name="adapter">The adapter.</param>
        public void SetAdapter(HtmlAdapter adapter)
        {
            this.htmlAdapter = adapter;
            InputComponent?.SetAdapter(htmlAdapter);
            RestorePointComponent?.SetAdapter(htmlAdapter);
        }

        #endregion
    }
}